apiVersion: "apps/v1"
kind: Deployment
metadata:
  name: backendsctracker
  labels:
    name: backendsctracker
    app: sctracker
spec:
  replicas: { { .Values.backendsctracker.replicas } }
  selector:
    matchLabels:
      name: backendsctracker
      app: sctracker
  template:
    metadata:
      labels:
        name: backendsctracker
        app: sctracker
    spec:
      containers:
        - name: backendsctracker
          image: "{{.Values.backendsctracker.image}}:{{.Values.app.imageTag}}"
          ports:
            - containerPort: { { .Values.backendsctracker.port } }
              name: http
              protocol: TCP
          resources:
            limits:
              cpu: { { .Values.backendsctracker.resources.limits.cpu } }
              memory: { { .Values.backendsctracker.resources.limits.memory } }
            requests:
              cpu: { { .Values.backend2.resources.requests.cpu } }
              memory: { { .Values.backend2.resources.requests.memory } }
          env:
            - name: LOG_LEVEL
              value: { { .Values.backendsctracker.env.LOG_LEVEL } }
            - name: DISABLE_AUTH
              value: "{{.Values.idp.disable}}"

---
apiVersion: v1
kind: Service
metadata:
  name: backendsctracker
  labels:
    app: sctracker
    name: backendsctracker
spec:
  type: ClusterIP
  ports:
    - name: http
      targetPort: { { .Values.backendsctracker.port } }
      port: { { .Values.backendsctracker.port } }
      protocol: TCP
  selector:
    app: sctracker
    name: backendsctracker

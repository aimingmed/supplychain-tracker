
apiVersion: apps/v1
kind: Deployment
metadata:
  name: databasesctracker
  labels:
    app: sctracker
    name: databasesctracker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sctracker
      name: databasesctracker
  template:
    metadata:
      labels:
        app: sctracker
        name: databasesctracker
    spec:
      imagePullSecrets:
        - name: ghcr-cred
      containers:
        - name: databasesctracker
          image: "{{ .Values.backendsctracker.database.image }}"
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "{{ .Values.backendsctracker.database.database }}"
            - name: POSTGRES_USER
              value: "{{ .Values.backendsctracker.database.user }}"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.backendsctracker.database.password }}"
            - name: DATABASE_URL
              value: {{ .Values.backendsctracker.env.DATABASE_URL }}
            - name: DATABASE_TEST_URL
              value: {{ .Values.backendsctracker.env.DATABASE_TEST_URL }}
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: databasesctracker-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: databasesctracker-pvc
  labels:
    app: sctracker
    name: databasesctracker
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: v1
kind: Service
metadata:
  name: databasesctracker
  labels:
    app: sctracker
    name: databasesctracker
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
      name: postgres
  selector:
    app: sctracker
    name: databasesctracker
